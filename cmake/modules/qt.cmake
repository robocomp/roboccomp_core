set(USE_QT_VERSION "6" CACHE STRING "Choose which Qt version to use") # Default to Qt6, user can override

if(NOT DEFINED QT.CMAKE)
  set(QT.CMAKE ON)

  # Wrap cpp
  function(QT_WRAP_CPP qt_version output)
    foreach(input_file ${ARGN})
      if(${qt_version} EQUAL 4)
        qt4_wrap_cpp(${output} ${input_file})
      elseif(${qt_version} EQUAL 5)
        qt5_wrap_cpp(${output} ${input_file})
      else()
        qt6_wrap_cpp(${output} ${input_file})
      endif()
    endforeach()
    set_property(SOURCE ${${output}} PROPERTY SKIP_AUTOGEN ON)
  endfunction()

  # Wrap ui
  function(QT_WRAP_UI qt_version output)
    foreach(input_file ${ARGN})
      message(STATUS "Generating header file from ${input_file}")
      if(${qt_version} EQUAL 4)
        qt4_wrap_ui(${output} ${input_file})
      elseif(${qt_version} EQUAL 5)
        qt5_wrap_ui(${output} ${input_file})
      else()
        qt6_wrap_ui(${output} ${input_file})
      endif()
    endforeach()
    set_property(SOURCE ${${output}} PROPERTY SKIP_AUTOGEN ON)
  endfunction()

  while(USE_QT_VERSION GREATER 3 AND NOT QT_FOUND)
    if(USE_QT_VERSION EQUAL 6)
      find_package(Qt6 COMPONENTS Gui Widgets Core OpenGL Xml QUIET)
      if(Qt6_FOUND)
        set(QT_LIBRARIES Qt6::Gui Qt6::Core Qt6::Widgets Qt6::OpenGL Qt6::Xml)
      endif()
    elseif(USE_QT_VERSION EQUAL 5)
      find_package(Qt5 COMPONENTS Gui Widgets Sql Core OpenGL Xml XmlPatterns QUIET)
      if(Qt5_FOUND)
        set(QT_LIBRARIES Qt5::Gui Qt5::Core Qt5::Widgets Qt5::Sql Qt5::OpenGL Qt5::Xml Qt5::XmlPatterns)
      endif()
    elseif(USE_QT_VERSION EQUAL 4)
      find_package(Qt4 QUIET)
      if(Qt4_FOUND)
        set(QT_USE_QTSQL TRUE)
        set(QT_USE_QTGUI TRUE)
        set(QT_USE_QTOPENGL TRUE)
        set(QT_USE_QTXML TRUE)
        set(QT_USE_QTSQL TRUE)
        set(QT_USE_QTSTATE TRUE)
        set(QT_USE_QTSTATEMACHINE TRUE)
        include(${QT_USE_FILE})
      endif()
    endif()
    math(EXPR USE_QT_VERSION "${USE_QT_VERSION} - 1")
  endwhile()

  if(USE_QT_VERSION LESS 4)
    message(FATAL_ERROR "No suitable Qt version found. Please install Qt4 or higher.")
  endif()

  message(STATUS "Compiling with Qt${USE_QT_VERSION}")

  set(CMAKE_AUTOMOC ON)
  set(CMAKE_AUTOUIC ON)
  add_definitions("-DBOOST_TT_HAS_OPERATOR_HPP_INCLUDED -Wall -DQT_DLL -DQT_GUI_LIB -DQT_CORE_LIB")
endif()